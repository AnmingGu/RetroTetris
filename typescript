Script started on Wed Dec 30 15:09:42 2020

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
[?1034hbash-3.2$ var x = 1
bash: var: command not found
bash-3.2$ int x  =[K[K= 1
bash: int: command not found
bash-3.2$ x = 1
x
console.bash-3.2$ x
console.logbash-3.2$ console.log(x)
bash: syntax error near unexpected token `x'
bash-3.2$ console.log(x)[C[C[C[C[C[C[C[C[C[C[Knod[K[K[Kls
Blocks$Piece.class	Tetris.class		script.js
Blocks.class		Tetris.java		style.css
Blocks.java		app.js			test.py
README.md		index.html		typescript
bash-3.2$ node script.js 
[33m23[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:4
    alert('Hi ' + name)
    ^

ReferenceError: alert is not defined
    at showAlert (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:4:5)
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:7:1)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5
    alert('Hi ' + name)
    ^

ReferenceError: alert is not defined
    at showAlert (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5:5)
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:8:1)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:6
        alert(x)
        ^

ReferenceError: alert is not defined
    at findX (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:6:9)
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:10:1)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:1
window.alert = myAlertFunction
^

ReferenceError: window is not defined
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:1:1)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:4
    d = document;
    ^

ReferenceError: document is not defined
    at myAlertFunction (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:4:5)
    at findX (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:40:9)
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:44:1)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:8
console.log(tetminoes)
            ^

ReferenceError: tetminoes is not defined
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:8:13)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
[ [32m'firstShape'[39m, [32m'secondShape'[39m, [32m'thirdShape'[39m, [32m'fourthShape'[39m ]
bash-3.2$ node script.js 
firstShape
bash-3.2$ node script.js 
[33m3[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5
showAlert(Emily)
          ^

ReferenceError: Emily is not defined
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5:11)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5
showAlert(Emily)
          ^

ReferenceError: Emily is not defined
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5:11)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5
showAlert(Emily)
          ^

ReferenceError: Emily is not defined
    at Object.<anonymous> (/Users/anminggu/Desktop/Computer Science/Tetris/script.js:5:11)
[90m    at Module._compile (node:internal/modules/cjs/loader:1102:14)[39m
[90m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1131:10)[39m
[90m    at Module.load (node:internal/modules/cjs/loader:967:32)[39m
[90m    at Function.Module._load (node:internal/modules/cjs/loader:807:14)[39m
[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)[39m
[90m    at node:internal/main/run_main_module:17:47[39m
bash-3.2$ node script.js 
Emily, you have been alerted
bash-3.2$ node script.js 
Emily, you have been alerted
bash-3.2$ ls
Blocks$Piece.class	Tetris.class		script.js
Blocks.class		Tetris.java		style.css
Blocks.java		app.js			test.py
README.md		index.html		typescript
bash-3.2$ ls
README.md	index.html	style.css
app.js		script.js	typescript
bash-3.2$ ls[K[Kpwd
/Users/anminggu/Desktop/Computer Science/Tetris
bash-3.2$ git add .
bash-3.2$ git commit -m
error: switch `m' requires a value
bash-3.2$ git commit -m '[K'Done for now'
[main 6a6bbca] Done for now
 10 files changed, 652 insertions(+), 555 deletions(-)
 delete mode 100644 Blocks$Piece.class
 delete mode 100644 Blocks.class
 delete mode 100644 Blocks.java
 delete mode 100644 Tetris.class
 delete mode 100644 Tetris.java
 create mode 100644 app.js
 create mode 100644 index.html
 create mode 100644 style.css
 delete mode 100644 test.py
 create mode 100644 typescript
bash-3.2$ git push -u o[K[K[K[K[K[K[K[K[Kcheck[K[Kk[Kckout
M	typescript
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)
bash-3.2$ git ch[K[Kpush -u origin main
To https://github.com/AnmingGu/Tetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/Tetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git pull
remote: Enumerating objects: 5, done.[K
remote: Counting objects:  20% (1/5)[Kremote: Counting objects:  40% (2/5)[Kremote: Counting objects:  60% (3/5)[Kremote: Counting objects:  80% (4/5)[Kremote: Counting objects: 100% (5/5)[Kremote: Counting objects: 100% (5/5), done.[K
remote: Compressing objects:  33% (1/3)[Kremote: Compressing objects:  66% (2/3)[Kremote: Compressing objects: 100% (3/3)[Kremote: Compressing objects: 100% (3/3), done.[K
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0[K
[KUnpacking objects:  33% (1/3)[KUnpacking objects:  66% (2/3)[KUnpacking objects: 100% (3/3)[KUnpacking objects: 100% (3/3), done.
From https://github.com/AnmingGu/Tetris
   1e8d987..66ed5c2  main       -> origin/main
hint: Waiting for your editor to close the file... [?1049h[>4;2m[?1h=[?2004h[1;8r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[8;1H"~/Desktop/Computer Science/Tetris/.git/MERGE_MSG" 6L, 294C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1HMerge branch 'main' of https://github.com/AnmingGu/Tetris into main
# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.
[94m~                                                                                     [1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?12$p




[5;1H[4;1H

[5;70H[6;13H


[m[?2004l[?1l>[>4;m[?1049l
[1]+  Stopped                 git pull
bash-3.2$ git push
To https://github.com/AnmingGu/Tetris.git
 [31m! [rejected]       [m main -> main (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/Tetris.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git pul[K[K[K[K[K[K[Kgit push[K[K[K[K[K[K[K[Kgit commit -m
error: switch `m' requires a value
bash-3.2$ git commit -m 'Update'
[main a60ab36] Update
bash-3.2$ git remote add https://github.com/AnmingGu/RetroTetris.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from

bash-3.2$ git remote add https://github.com/AnmingGu/RetroTetris.git[C[C[C[C[C[C[C[C[C[C[Kgit remote add origin https://github.com/AnmingGu/RetroTetris.git
fatal: remote origin already exists.
bash-3.2$ git remot[K[Kte[K[Kote -v
origin	https://github.com/AnmingGu/Tetris.git (fetch)
origin	https://github.com/AnmingGu/Tetris.git (push)
bash-3.2$ git remote https://github.com/AnmingGu/RetroTetris.git origin
error: Unknown subcommand: https://github.com/AnmingGu/RetroTetris.git
usage: git remote [-v | --verbose]
   or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>
   or: git remote rename <old> <new>
   or: git remote remove <name>
   or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>)
   or: git remote [-v | --verbose] show [-n] <name>
   or: git remote prune [-n | --dry-run] <name>
   or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]
   or: git remote set-branches [--add] <name> <branch>...
   or: git remote get-url [--push] [--all] <name>
   or: git remote set-url [--push] <name> <newurl> [<oldurl>]
   or: git remote set-url --add <name> <newurl>
   or: git remote set-url --delete <name> <url>

    -v, --verbose         be verbose; must be placed before a subcommand

bash-3.2$ git remote set-url origin https://github.com/AnmingGu/RetroTetris.git
bash-3.2$ git remote
origin
bash-3.2$ git remote -v
origin	https://github.com/AnmingGu/RetroTetris.git (fetch)
origin	https://github.com/AnmingGu/RetroTetris.git (push)
bash-3.2$ git commit -m'[K 'u[KUpdate'
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
	[31mmodified:   typescript[m

no changes added to commit
bash-3.2$ git push -u origin mi[Kain
[KEnumerating objects: 10, done.
[KCounting objects:  10% (1/10)[KCounting objects:  20% (2/10)[KCounting objects:  30% (3/10)[KCounting objects:  40% (4/10)[KCounting objects:  50% (5/10)[KCounting objects:  60% (6/10)[KCounting objects:  70% (7/10)[KCounting objects:  80% (8/10)[KCounting objects:  90% (9/10)[KCounting objects: 100% (10/10)[KCounting objects: 100% (10/10), done.
Delta compression using up to 4 threads
[KCompressing objects:  12% (1/8)[KCompressing objects:  25% (2/8)[KCompressing objects:  37% (3/8)[KCompressing objects:  50% (4/8)[KCompressing objects:  62% (5/8)[KCompressing objects:  75% (6/8)[KCompressing objects:  87% (7/8)[KCompressing objects: 100% (8/8)[KCompressing objects: 100% (8/8), done.
[KWriting objects:  12% (1/8)[KWriting objects:  25% (2/8)[KWriting objects:  37% (3/8)[KWriting objects:  50% (4/8)[KWriting objects:  62% (5/8)[KWriting objects:  75% (6/8)[KWriting objects:  87% (7/8)[KWriting objects: 100% (8/8)[KWriting objects: 100% (8/8), 3.50 KiB | 1.17 MiB/s, done.
Total 8 (delta 1), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), done.[K
To https://github.com/AnmingGu/RetroTetris.git
   66ed5c2..a60ab36  main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
bash-3.2$ git pus[K[K[Kadd l[K.
bash-3.2$ git commit -m
error: switch `m' requires a value
bash-3.2$ git commit -m 'Done with tutorial'
[main 15cd449] Done with tutorial
 3 files changed, 240 insertions(+), 17 deletions(-)
bash-3.2$ git push
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ g[Kgit checkout
M	typescript
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)
bash-3.2$ git c[Kpush -u origin main
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git init
Reinitialized existing Git repository in /Users/anminggu/Desktop/Computer Science/Tetris/.git/
bash-3.2$ git commit -m 'Finishd[Kedw[K wiith t[K[K[K[K[Kth tutorial'
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
	[31mmodified:   app.js[m
	[31mmodified:   typescript[m

no changes added to commit
bash-3.2$ git push
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git remote
origin
bash-3.2$ git checkout
M	app.js
M	typescript
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)
bash-3.2$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   app.js[m
	[31mmodified:   typescript[m

no changes added to commit (use "git add" and/or "git commit -a")
bash-3.2$ p[Kgit push origin -m[K[Kmain
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git put[Ksh -u origin main
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (fetch first)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git push --help
[?1049h[?1h=GIT-PUSH(1)                       Git Manual                      GIT-PUSH(1)

[1mNAME[0m
       git-push - Update remote refs along with associated objects

[1mSYNOPSIS[0m
       [4mgit[24m [4mpush[24m [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run :[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KBB[K] [--receive-pack=<git-receive-pack>]
:[K[K [KESCESC[KOO[KBB[K                  [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | :[K[K [KESCESC[KOO[KBB[K --verbose]
:[K[K [KESCESC[KOO[KBB[K                  [-u | --set-upstream] [-o <string> | --push-option=<string>]
:[K[K [KESCESC[KOO[KBB[K                  [--[no-]signed|--signed=(true|false|if-asked)]
:[K[K [KESCESC[KOO[KBB[K                  [--force-with-lease[=<refname>[:<expect>]]]
:[K[K [KESCESC[KOO[KBB[K                  [--no-verify] [<repository> [<refspec>...]]
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mDESCRIPTION[0m
:[K[K [KESCESC[KOO[KBB[K       Updates remote refs using local refs, while sending objects necessary
:[K[K [KESCESC[KOO[KBB[K       to complete the given refs.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       You can make interesting things happen to a repository every time you
:[K[K [KESCESC[KOO[KBB[K       push into it, by setting up [4mhooks[24m there. See documentation for [1mgit-[0m
:[K[K [KESCESC[KOO[KBB[K       [1mreceive-pack[0m(1).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       When the command line does not specify where to push with the
:[K[K [KESCESC[KOO[KBB[K       [1m<repository>[0m argument, [1mbranch.*.remote[0m configuration for the current
:[K[K [KESCESC[KOO[KBB[K       branch is consulted to determine where to push. If the configuration
:[K[K [KESCESC[KOO[KBB[K       is missing, it defaults to [4morigin[24m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       When the command line does not specify what to push with [1m<refspec>...[0m
:[K[K [KESCESC[KOO[KBB[K       arguments or [1m--all[0m, [1m--mirror[0m, [1m--tags[0m options, the command finds the
:[K[K [KESCESC[KOO[KBB[K       default [1m<refspec>[0m by consulting [1mremote.*.push[0m configuration, and if it
:[K[K [KESCESC[KOO[KBB[K       is not found, honors [1mpush.default[0m configuration to decide what to push
:[K[K [KESCESC[KOO[KBB[K       (See [1mgit-config[0m(1) for the meaning of [1mpush.default[0m).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       When neither the command-line nor the configuration specify what to
:[K[K [KESCESC[KOO[KBB[K       push, the default behavior is used, which corresponds to the [1msimple[0m
:[K[K [KESCESC[KOO[KBB[K       value for [1mpush.default[0m: the current branch is pushed to the
:[K[K [KESCESC[KOO[KBB[K       corresponding upstream branch, but as a safety measure, the push is
:[K[K [KESCESC[KOO[KBB[K       aborted if the upstream branch does not have the same name as the
:[K[K [KESCESC[KOO[KBB[K       local one.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mOPTIONS[0m
:[K[K [KESCESC[KOO[KBB[K       <repository>
:[K[K [KESCESC[KOO[KBB[K           The "remote" repository that is destination of a push operation.
:[K[K [KESCESC[KOO[KBB[K           This parameter can be either a URL (see the section GIT URLS
:[K[K [KESCESC[KOO[KBB[K           below) or the name of a remote (see the section REMOTES below).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       <refspec>...
:[K[K [KESCESC[KOO[KBB[K           Specify what destination ref to update with what source object.
:[K[K [KESCESC[KOO[KBB[K           The format of a <refspec> parameter is an optional plus [1m+[0m,
:[K[K [KESCESC[KOO[KBB[K           followed by the source object <src>, followed by a colon [1m:[0m,
:[K[K [KESCESC[KOO[KBB[K           followed by the destination ref <dst>.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The <src> is often the name of the branch you would want to push,
:[K[K [KESCESC[KOO[KBB[K           but it can be any arbitrary "SHA-1 expression", such as [1mmaster~4[0m
:[K[K [KESCESC[KOO[KBB[K           or [1mHEAD[0m (see [1mgitrevisions[0m(7)).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The <dst> tells which ref on the remote side is updated with this
:[K[K [KESCESC[KOO[KBB[K           push. Arbitrary expressions cannot be used here, an actual ref
:[K[K [KESCESC[KOO[KBB[K           must be named. If [1mgit[0m [1mpush[0m [1m[<repository>][0m without any [1m<refspec>[0m
:[K[K [KESCESC[KOO[KBB[K           argument is set to update some ref at the destination with [1m<src>[0m
:[K[K [KESCESC[KOO[KBB[K           with [1mremote.<repository>.push[0m configuration variable, [1m:<dst>[0m part
:[K[K [KESCESC[KOO[KBB[K           can be omitted--such a push will update a ref that [1m<src>[0m normally
:[K[K [KESCESC[KOO[KBB[K           updates without any [1m<refspec>[0m on the command line. Otherwise,
:[K[K [KESCESC[KOO[KBB[K           missing [1m:<dst>[0m means to update the same ref as the [1m<src>[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           If <dst> doesn't start with [1mrefs/[0m (e.g.  [1mrefs/heads/master[0m) we
:[K[K [KESCESC[KOO[KBB[K           will try to infer where in [1mrefs/*[0m on the destination <repository>
:[K[K [KESCESC[KOO[KBB[K           it belongs based on the type of <src> being pushed and whether
:[K[K [KESCESC[KOO[KBB[K           <dst> is ambiguous.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           o   If <dst> unambiguously refers to a ref on the <repository>
:[K[K [KESCESC[KOO[KBB[K               remote, then push to that ref.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           o   If <src> resolves to a ref starting with refs/heads/ or
:[K[K [KESCESC[KOO[KBB[K               refs/tags/, then prepend that to <dst>.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           o   Other ambiguity resolutions might be added in the future, but
:[K[K [KESCESC[KOO[KBB[K               for now any other cases will error out with an error
:[K[K [KESCESC[KOO[KBB[K               indicating what we tried, and depending on the
:[K[K [KESCESC[KOO[KBB[K               [1madvice.pushUnqualifiedRefname[0m configuration (see [1mgit-[0m
:[K[K [KESCESC[KOO[KBB[K               [1mconfig[0m(1)) suggest what refs/ namespace you may have wanted to
:[K[K [KESCESC[KOO[KBB[K               push to.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The object referenced by <src> is used to update the <dst>
:[K[K [KESCESC[KOO[KBB[K           reference on the remote side. Whether this is allowed depends on
:[K[K [KESCESC[KOO[KBB[K           where in [1mrefs/*[0m the <dst> reference lives as described in detail
:[K[K [KESCESC[KOO[KBB[K           below, in those sections "update" means any modifications except
:[K[K [KESCESC[KOO[KBB[K           deletes, which as noted after the next few sections are treated
:[K[K [KESCESC[KOO[KBB[K           differently.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The [1mrefs/heads/*[0m namespace will only accept commit objects, and
:[K[K [KESCESC[KOO[KBB[K           updates only if they can be fast-forwarded.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The [1mrefs/tags/*[0m namespace will accept any kind of object (as
:[K[K [KESCESC[KOO[KBB[K           commits, trees and blobs can be tagged), and any updates to them
:[K[K [KESCESC[KOO[KBB[K           will be rejected.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           It's possible to push any type of object to any namespace outside
:[K[K [KESCESC[KOO[KBB[K           of [1mrefs/{tags,heads}/*[0m. In the case of tags and commits, these
:[K[K [KESCESC[KOO[KBB[K           will be treated as if they were the commits inside [1mrefs/heads/*[0m
:[K[K [KESCESC[KOO[KBB[K           for the purposes of whether the update is allowed.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           I.e. a fast-forward of commits and tags outside
:[K[K [KESCESC[KOO[KBB[K           [1mrefs/{tags,heads}/*[0m is allowed, even in cases where what's being
:[K[K [KESCESC[KOO[KBB[K           fast-forwarded is not a commit, but a tag object which happens to
:[K[K [KESCESC[KOO[KBB[K           point to a new commit which is a fast-forward of the commit the
:[K[K [KESCESC[KOO[KBB[K           last tag (or commit) it's replacing. Replacing a tag with an
:[K[K [KESCESC[KOO[KBB[K           entirely different tag is also allowed, if it points to the same
:[K[K [KESCESC[KOO[KBB[K           commit, as well as pushing a peeled tag, i.e. pushing the commit
:[K[K [KESCESC[KOO[KBB[K           that existing tag object points to, or a new tag object which an
:[K[K [KESCESC[KOO[KBB[K           existing commit points to.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Tree and blob objects outside of [1mrefs/{tags,heads}/*[0m will be
:[K[K [KESCESC[KOO[KBB[K           treated the same way as if they were inside [1mrefs/tags/*[0m, any
:[K[K [KESCESC[KOO[KBB[K           update of them will be rejected.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           All of the rules described above about what's not allowed as an
:[K[K [KESCESC[KOO[KBB[K           update can be overridden by adding an the optional leading [1m+[0m to a
:[K[K [KESCESC[KOO[KBB[K           refspec (or using [1m--force[0m command line option). The only exception
:[K[K [KESCESC[KOO[KBB[K           to this is that no amount of forcing will make the [1mrefs/heads/*[0m
:[K[K [KESCESC[KOO[KBB[K           namespace accept a non-commit object. Hooks and configuration can
:[K[K [KESCESC[KOO[KBB[K           also override or amend these rules, see e.g.
:[K[K [KESCESC[KOO[KBB[K           [1mreceive.denyNonFastForwards[0m in [1mgit-config[0m(1) and [1mpre-receive[0m and
:[K[K [KESCESC[KOO[KBB[K           [1mupdate[0m in [1mgithooks[0m(5).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Pushing an empty <src> allows you to delete the <dst> ref from the
:[K[K [KESCESC[KOO[KBB[K           remote repository. Deletions are always accepted without a leading
:[K[K [KESCESC[KOO[KBB[K           [1m+[0m in the refspec (or [1m--force[0m), except when forbidden by
:[K[K [KESCESC[KOO[KBB[K           configuration or hooks. See [1mreceive.denyDeletes[0m in [1mgit-config[0m(1)
:[K[K [KESCESC[KOO[KBB[K           and [1mpre-receive[0m and [1mupdate[0m in [1mgithooks[0m(5).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The special refspec [1m:[0m (or [1m+:[0m to allow non-fast-forward updates)
:[K[K [KESCESC[KOO[KBB[K           directs Git to push "matching" branches: for every branch that
:[K[K [KESCESC[KOO[KBB[K           exists on the local side, the remote side is updated if a branch
:[K[K [KESCESC[KOO[KBB[K           of the same name already exists on the remote side.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1mtag[0m [1m<tag>[0m means the same as [1mrefs/tags/<tag>:refs/tags/<tag>[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --all
:[K[K [KESCESC[KOO[KBB[K           Push all branches (i.e. refs under [1mrefs/heads/[0m); cannot be used
:[K[K [KESCESC[KOO[KBB[K           with other <refspec>.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --prune
:[K[K [KESCESC[KOO[KBB[K           Remove remote branches that don't have a local counterpart. For
:[K[K [KESCESC[KOO[KBB[K           example a remote branch [1mtmp[0m will be removed if a local branch with
:[K[K [KESCESC[KOO[KBB[K           the same name doesn't exist any more. This also respects refspecs,
:[K[K [KESCESC[KOO[KBB[K           e.g.  [1mgit[0m [1mpush[0m [1m--prune[0m [1mremote[0m [1mrefs/heads/*:refs/tmp/*[0m would make
:[K[K [KESCESC[KOO[KBB[K           sure that remote [1mrefs/tmp/foo[0m will be removed if [1mrefs/heads/foo[0m
:[K[K [KESCESC[KOO[KBB[K           doesn't exist.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --mirror
:[K[K [KESCESC[KOO[KBB[K           Instead of naming each ref to push, specifies that all refs under
:[K[K [KESCESC[KOO[KBB[K           [1mrefs/[0m (which includes but is not limited to [1mrefs/heads/[0m,
:[K[K [KESCESC[KOO[KBB[K           [1mrefs/remotes/[0m, and [1mrefs/tags/[0m) be mirrored to the remote
:[K[K [KESCESC[KOO[KBB[K           repository. Newly created local refs will be pushed to the remote
:[K[K [KESCESC[KOO[KBB[K           end, locally updated refs will be force updated on the remote end,
:[K[K [KESCESC[KOO[KBB[K           and deleted refs will be removed from the remote end. This is the
:[K[K [KESCESC[KOO[KBB[K           default if the configuration option [1mremote.<remote>.mirror[0m is set.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -n, --dry-run
:[K[K [KESCESC[KOO[KBB[K           Do everything except actually send the updates.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --porcelain
:[K[K [KESCESC[KOO[KBB[K           Produce machine-readable output. The output status line for each
:[K[K [KESCESC[KOO[KBB[K           ref will be tab-separated and sent to stdout instead of stderr.
:[K[K [KESCESC[KOO[KBB[K           The full symbolic names of the refs will be given.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -d, --delete
:[K[K [KESCESC[KOO[KBB[K           All listed refs are deleted from the remote repository. This is
:[K[K [KESCESC[KOO[KBB[K           the same as prefixing all refs with a colon.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --tags
:[K[K [KESCESC[KOO[KBB[K           All refs under [1mrefs/tags[0m are pushed, in addition to refspecs
:[K[K [KESCESC[KOO[KBB[K           explicitly listed on the command line.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --follow-tags
:[K[K [KESCESC[KOO[KBB[K           Push all the refs that would be pushed without this option, and
:[K[K [KESCESC[KOO[KBB[K           also push annotated tags in [1mrefs/tags[0m that are missing from the
:[K[K [KESCESC[KOO[KBB[K           remote but are pointing at commit-ish that are reachable from the
:[K[K [KESCESC[KOO[KBB[K           refs being pushed. This can also be specified with configuration
:[K[K [KESCESC[KOO[KBB[K           variable [1mpush.followTags[0m. For more information, see
:[K[K [KESCESC[KOO[KBB[K           [1mpush.followTags[0m in [1mgit-config[0m(1).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --[no-]signed, --signed=(true|false|if-asked)
:[K[K [KESCESC[KOO[KBB[K           GPG-sign the push request to update refs on the receiving side, to
:[K[K [KESCESC[KOO[KBB[K           allow it to be checked by the hooks and/or be logged. If [1mfalse[0m or
:[K[K [KESCESC[KOO[KBB[K           [1m--no-signed[0m, no signing will be attempted. If [1mtrue[0m or [1m--signed[0m,
:[K[K [KESCESC[KOO[KBB[K           the push will fail if the server does not support signed pushes.
:[K[K [KESCESC[KOO[KBB[K           If set to [1mif-asked[0m, sign if and only if the server supports signed
:[K[K [KESCESC[KOO[KBB[K           pushes. The push will also fail if the actual call to [1mgpg[0m [1m--sign[0m
:[K[K [KESCESC[KOO[KBB[K           fails. See [1mgit-receive-pack[0m(1) for the details on the receiving
:[K[K [KESCESC[KOO[KBB[K           end.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --[no-]atomic
:[K[K [KESCESC[KOO[KBB[K           Use an atomic transaction on the remote side if available. Either
:[K[K [KESCESC[KOO[KBB[K           all refs are updated, or on error, no refs are updated. If the
:[K[K [KESCESC[KOO[KBB[K           server does not support atomic pushes the push will fail.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -o <option>, --push-option=<option>
:[K[K [KESCESC[KOO[KBB[K           Transmit the given string to the server, which passes them to the
:[K[K [KESCESC[KOO[KBB[K           pre-receive as well as the post-receive hook. The given string
:[K[K [KESCESC[KOO[KBB[K           must not contain a NUL or LF character. When multiple
:[K[K [KESCESC[KOO[KBB[K           [1m--push-option=<option>[0m are given, they are all sent to the other
:[K[K [KESCESC[KOO[KBB[K           side in the order listed on the command line. When no
:[K[K [KESCESC[KOO[KBB[K           [1m--push-option=<option>[0m is given from the command line, the values
:[K[K [KESCESC[KOO[KBB[K           of configuration variable [1mpush.pushOption[0m are used instead.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --receive-pack=<git-receive-pack>, --exec=<git-receive-pack>
:[K[K [KESCESC[KOO[KBB[K           Path to the [4mgit-receive-pack[24m program on the remote end. Sometimes
:[K[K [KESCESC[KOO[KBB[K           useful when pushing to a remote repository over ssh, and you do
:[K[K [KESCESC[KOO[KBB[K           not have the program in a directory on the default $PATH.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --[no-]force-with-lease, --force-with-lease=<refname>,
:[K[K [KESCESC[KOO[KBB[K       --force-with-lease=<refname>:<expect>
:[K[K [KESCESC[KOO[KBB[K           Usually, "git push" refuses to update a remote ref that is not an
:[K[K [KESCESC[KOO[KBB[K           ancestor of the local ref used to overwrite it.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           This option overrides this restriction if the current value of the
:[K[K [KESCESC[KOO[KBB[K           remote ref is the expected value. "git push" fails otherwise.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Imagine that you have to rebase what you have already published.
:[K[K [KESCESC[KOO[KBB[K           You will have to bypass the "must fast-forward" rule in order to
:[K[K [KESCESC[KOO[KBB[K           replace the history you originally published with the rebased
:[K[K [KESCESC[KOO[KBB[K           history. If somebody else built on top of your original history
:[K[K [KESCESC[KOO[KBB[K           while you are rebasing, the tip of the branch at the remote may
:[K[K [KESCESC[KOO[KBB[K           advance with her commit, and blindly pushing with [1m--force[0m will
:[K[K [KESCESC[KOO[KBB[K           lose her work.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           This option allows you to say that you expect the history you are
:[K[K [KESCESC[KOO[KBB[K           updating is what you rebased and want to replace. If the remote
:[K[K [KESCESC[KOO[KBB[K           ref still points at the commit you specified, you can be sure that
:[K[K [KESCESC[KOO[KBB[K           no other people did anything to the ref. It is like taking a
:[K[K [KESCESC[KOO[KBB[K           "lease" on the ref without explicitly locking it, and the remote
:[K[K [KESCESC[KOO[KBB[K           ref is updated only if the "lease" is still valid.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease[0m alone, without specifying the details, will
:[K[K [KESCESC[KOO[KBB[K           protect all remote refs that are going to be updated by requiring
:[K[K [KESCESC[KOO[KBB[K           their current value to be the same as the remote-tracking branch
:[K[K [KESCESC[KOO[KBB[K           we have for them.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease=<refname>[0m, without specifying the expected
:[K[K [KESCESC[KOO[KBB[K           value, will protect the named ref (alone), if it is going to be
:[K[K [KESCESC[KOO[KBB[K           updated, by requiring its current value to be the same as the
:[K[K [KESCESC[KOO[KBB[K           remote-tracking branch we have for it.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease=<refname>:<expect>[0m will protect the named ref
:[K[K [KESCESC[KOO[KBB[K           (alone), if it is going to be updated, by requiring its current
:[K[K [KESCESC[KOO[KBB[K           value to be the same as the specified value [1m<expect>[0m (which is
:[K[K [KESCESC[KOO[KBB[K           allowed to be different from the remote-tracking branch we have
:[K[K [KESCESC[KOO[KBB[K           for the refname, or we do not even have to have such a
:[K[K [KESCESC[KOO[KBB[K           remote-tracking branch when this form is used). If [1m<expect>[0m is the
:[K[K [KESCESC[KOO[KBB[K           empty string, then the named ref must not already exist.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Note that all forms other than
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease=<refname>:<expect>[0m that specifies the expected
:[K[K [KESCESC[KOO[KBB[K           current value of the ref explicitly are still experimental and
:[K[K [KESCESC[KOO[KBB[K           their semantics may change as we gain experience with this
:[K[K [KESCESC[KOO[KBB[K           feature.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           "--no-force-with-lease" will cancel all the previous
:[K[K [KESCESC[KOO[KBB[K           --force-with-lease on the command line.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           A general note on safety: supplying this option without an
:[K[K [KESCESC[KOO[KBB[K           expected value, i.e. as [1m--force-with-lease[0m or
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease=<refname>[0m interacts very badly with anything
:[K[K [KESCESC[KOO[KBB[K           that implicitly runs [1mgit[0m [1mfetch[0m on the remote to be pushed to in
:[K[K [KESCESC[KOO[KBB[K           the background, e.g.  [1mgit[0m [1mfetch[0m [1morigin[0m on your repository in a
:[K[K [KESCESC[KOO[KBB[K           cronjob.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The protection it offers over [1m--force[0m is ensuring that subsequent
:[K[K [KESCESC[KOO[KBB[K           changes your work wasn't based on aren't clobbered, but this is
:[K[K [KESCESC[KOO[KBB[K           trivially defeated if some background process is updating refs in
:[K[K [KESCESC[KOO[KBB[K           the background. We don't have anything except the remote tracking
:[K[K [KESCESC[KOO[KBB[K           info to go by as a heuristic for refs you're expected to have seen
:[K[K [KESCESC[KOO[KBB[K           & are willing to clobber.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           If your editor or some other system is running [1mgit[0m [1mfetch[0m in the
:[K[K [KESCESC[KOO[KBB[K           background for you a way to mitigate this is to simply set up
:[K[K [KESCESC[KOO[KBB[K           another remote:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K               git remote add origin-push $(git config remote.origin.url)
:[K[K [KESCESC[KOO[KBB[K               git fetch origin-push
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Now when the background process runs [1mgit[0m [1mfetch[0m [1morigin[0m the
:[K[K [KESCESC[KOO[KBB[K           references on [1morigin-push[0m won't be updated, and thus commands
:[K[K [KESCESC[KOO[KBB[K           like:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K               git push --force-with-lease origin-push
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Will fail unless you manually run [1mgit[0m [1mfetch[0m [1morigin-push[0m. This
:[K[K [KESCESC[KOO[KBB[K           method is of course entirely defeated by something that runs [1mgit[0m
:[K[K [KESCESC[KOO[KBB[K           [1mfetch[0m [1m--all[0m, in that case you'd need to either disable it or do
:[K[K [KESCESC[KOO[KBB[K           something more tedious like:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K               git fetch              # update 'master' from remote
:[K[K [KESCESC[KOO[KBB[K               git tag base master    # mark our base point
:[K[K [KESCESC[KOO[KBB[K               git rebase -i master   # rewrite some commits
:[K[K [KESCESC[KOO[KBB[K               git push --force-with-lease=master:base master:master
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           I.e. create a [1mbase[0m tag for versions of the upstream code that
:[K[K [KESCESC[KOO[KBB[K           you've seen and are willing to overwrite, then rewrite history,
:[K[K [KESCESC[KOO[KBB[K           and finally force push changes to [1mmaster[0m if the remote version is
:[K[K [KESCESC[KOO[KBB[K           still at [1mbase[0m, regardless of what your local [1mremotes/origin/master[0m
:[K[K [KESCESC[KOO[KBB[K           has been updated to in the background.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -f, --force
:[K[K [KESCESC[KOO[KBB[K           Usually, the command refuses to update a remote ref that is not an
:[K[K [KESCESC[KOO[KBB[K           ancestor of the local ref used to overwrite it. Also, when
:[K[K [KESCESC[KOO[KBB[K           [1m--force-with-lease[0m option is used, the command refuses to update a
:[K[K [KESCESC[KOO[KBB[K           remote ref whose current value does not match what is expected.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           This flag disables these checks, and can cause the remote
:[K[K [KESCESC[KOO[KBB[K           repository to lose commits; use it with care.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Note that [1m--force[0m applies to all the refs that are pushed, hence
:[K[K [KESCESC[KOO[KBB[K           using it with [1mpush.default[0m set to [1mmatching[0m or with multiple push
:[K[K [KESCESC[KOO[KBB[K           destinations configured with [1mremote.*.push[0m may overwrite refs
:[K[K [KESCESC[KOO[KBB[K           other than the current branch (including local refs that are
:[K[K [KESCESC[KOO[KBB[K           strictly behind their remote counterpart). To force a push to only
:[K[K [KESCESC[KOO[KBB[K           one branch, use a [1m+[0m in front of the refspec to push (e.g [1mgit[0m [1mpush[0m
:[K[K [KESCESC[KOO[KBB[K           [1morigin[0m [1m+master[0m to force a push to the [1mmaster[0m branch). See the
:[K[K [KESCESC[KOO[KBB[K           [1m<refspec>...[0m  section above for details.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --repo=<repository>
:[K[K [KESCESC[KOO[KBB[K           This option is equivalent to the <repository> argument. If both
:[K[K [KESCESC[KOO[KBB[K           are specified, the command-line argument takes precedence.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -u, --set-upstream
:[K[K [KESCESC[KOO[KBB[K           For every branch that is up to date or successfully pushed, add
:[K[K [KESCESC[KOO[KBB[K           upstream (tracking) reference, used by argument-less [1mgit-pull[0m(1)
:[K[K [KESCESC[KOO[KBB[K           and other commands. For more information, see [1mbranch.<name>.merge[0m
:[K[K [KESCESC[KOO[KBB[K           in [1mgit-config[0m(1).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --[no-]thin
:[K[K [KESCESC[KOO[KBB[K           These options are passed to [1mgit-send-pack[0m(1). A thin transfer
:[K[K [KESCESC[KOO[KBB[K           significantly reduces the amount of sent data when the sender and
:[K[K [KESCESC[KOO[KBB[K           receiver share many of the same objects in common. The default is
:[K[K [KESCESC[KOO[KBB[K           [1m--thin[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -q, --quiet
:[K[K [KESCESC[KOO[KBB[K           Suppress all output, including the listing of updated refs, unless
:[K[K [KESCESC[KOO[KBB[K           an error occurs. Progress is not reported to the standard error
:[K[K [KESCESC[KOO[KBB[K           stream.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -v, --verbose
:[K[K [KESCESC[KOO[KBB[K           Run verbosely.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --progress
:[K[K [KESCESC[KOO[KBB[K           Progress status is reported on the standard error stream by
:[K[K [KESCESC[KOO[KBB[K           default when it is attached to a terminal, unless -q is specified.
:[K[K [KESCESC[KOO[KBB[K           This flag forces progress status even if the standard error stream
:[K[K [KESCESC[KOO[KBB[K           is not directed to a terminal.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --no-recurse-submodules, --recurse-submodules=check|on-demand|only|no
:[K[K [KESCESC[KOO[KBB[K           May be used to make sure all submodule commits used by the
:[K[K [KESCESC[KOO[KBB[K           revisions to be pushed are available on a remote-tracking branch.
:[K[K [KESCESC[KOO[KBB[K           If [4mcheck[24m is used Git will verify that all submodule commits that
:[K[K [KESCESC[KOO[KBB[K           changed in the revisions to be pushed are available on at least
:[K[K [KESCESC[KOO[KBB[K           one remote of the submodule. If any commits are missing the push
:[K[K [KESCESC[KOO[KBB[K           will be aborted and exit with non-zero status. If [4mon-demand[24m is
:[K[K [KESCESC[KOO[KBB[K           used all submodules that changed in the revisions to be pushed
:[K[K [KESCESC[KOO[KBB[K           will be pushed. If on-demand was not able to push all necessary
:[K[K [KESCESC[KOO[KBB[K           revisions it will also be aborted and exit with non-zero status.
:[K[K [KESCESC[KOO[KBB[K           If [4monly[24m is used all submodules will be recursively pushed while
:[K[K [KESCESC[KOO[KBB[K           the superproject is left unpushed. A value of [4mno[24m or using
:[K[K [KESCESC[KOO[KBB[K           [1m--no-recurse-submodules[0m can be used to override the
:[K[K [KESCESC[KOO[KBB[K           push.recurseSubmodules configuration variable when no submodule
:[K[K [KESCESC[KOO[KBB[K           recursion is required.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       --[no-]verify
:[K[K [KESCESC[KOO[KBB[K           Toggle the pre-push hook (see [1mgithooks[0m(5)). The default is
:[K[K [KESCESC[KOO[KBB[K           --verify, giving the hook a chance to prevent the push. With
:[K[K [KESCESC[KOO[KBB[K           --no-verify, the hook is bypassed completely.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -4, --ipv4
:[K[K [KESCESC[KOO[KBB[K           Use IPv4 addresses only, ignoring IPv6 addresses.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       -6, --ipv6
:[K[K [KESCESC[KOO[KBB[K           Use IPv6 addresses only, ignoring IPv4 addresses.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mGIT[0m [1mURLS[0m
:[K[K [KESCESC[KOO[KBB[K       In general, URLs contain information about the transport protocol, the
:[K[K [KESCESC[KOO[KBB[K       address of the remote server, and the path to the repository.
:[K[K [KESCESC[KOO[KBB[K       Depending on the transport protocol, some of this information may be
:[K[K [KESCESC[KOO[KBB[K       absent.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Git supports ssh, git, http, and https protocols (in addition, ftp,
:[K[K [KESCESC[KOO[KBB[K       and ftps can be used for fetching, but this is inefficient and
:[K[K [KESCESC[KOO[KBB[K       deprecated; do not use it).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The native transport (i.e. git:// URL) does no authentication and
:[K[K [KESCESC[KOO[KBB[K       should be used with caution on unsecured networks.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The following syntaxes may be used with them:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   ssh://[user@]host.xz[:port]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   git://host.xz[:port]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   http[s]://host.xz[:port]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   ftp[s]://host.xz[:port]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       An alternative scp-like syntax may also be used with the ssh protocol:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   [user@]host.xz:path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       This syntax is only recognized if there are no slashes before the
:[K[K [KESCESC[KOO[KBB[K       first colon. This helps differentiate a local path that contains a
:[K[K [KESCESC[KOO[KBB[K       colon. For example the local path [1mfoo:bar[0m could be specified as an
:[K[K [KESCESC[KOO[KBB[K       absolute path or [1m./foo:bar[0m to avoid being misinterpreted as an ssh
:[K[K [KESCESC[KOO[KBB[K       url.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The ssh and git protocols additionally support ~username expansion:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   ssh://[user@]host.xz[:port]/~[user]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   git://host.xz[:port]/~[user]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   [user@]host.xz:/~[user]/path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       For local repositories, also supported by Git natively, the following
:[K[K [KESCESC[KOO[KBB[K       syntaxes may be used:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   /path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   file:///path/to/repo.git/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       These two syntaxes are mostly equivalent, except when cloning, when
:[K[K [KESCESC[KOO[KBB[K       the former implies --local option. See [1mgit-clone[0m(1) for details.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       When Git doesn't know how to handle a certain transport protocol, it
:[K[K [KESCESC[KOO[KBB[K       attempts to use the [4mremote-<transport>[24m remote helper, if one exists.
:[K[K [KESCESC[KOO[KBB[K       To explicitly request a remote helper, the following syntax may be
:[K[K [KESCESC[KOO[KBB[K       used:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   <transport>::<address>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       where <address> may be a path, a server and path, or an arbitrary
:[K[K [KESCESC[KOO[KBB[K       URL-like string recognized by the specific remote helper being
:[K[K [KESCESC[KOO[KBB[K       invoked. See [1mgitremote-helpers[0m(7) for details.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       If there are a large number of similarly-named remote repositories and
:[K[K [KESCESC[KOO[KBB[K       you want to use a different format for them (such that the URLs you
:[K[K [KESCESC[KOO[KBB[K       use will be rewritten into URLs that work), you can create a
:[K[K [KESCESC[KOO[KBB[K       configuration section of the form:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   [url "<actual url base>"]
:[K[K [KESCESC[KOO[KBB[K                           insteadOf = <other url base>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       For example, with this:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   [url "git://git.host.xz/"]
:[K[K [KESCESC[KOO[KBB[K                           insteadOf = host.xz:/path/to/
:[K[K [KESCESC[KOO[KBB[K                           insteadOf = work:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       a URL like "work:repo.git" or like "host.xz:/path/to/repo.git" will be
:[K[K [KESCESC[KOO[KBB[K       rewritten in any context that takes a URL to be
:[K[K [KESCESC[KOO[KBB[K       "git://git.host.xz/repo.git".
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       If you want to rewrite URLs for push only, you can create a
:[K[K [KESCESC[KOO[KBB[K       configuration section of the form:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   [url "<actual url base>"]
:[K[K [KESCESC[KOO[KBB[K                           pushInsteadOf = <other url base>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       For example, with this:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   [url "ssh://example.org/"]
:[K[K [KESCESC[KOO[KBB[K                           pushInsteadOf = git://example.org/
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       a URL like "git://example.org/path/to/repo.git" will be rewritten to
:[K[K [KESCESC[KOO[KBB[K       "ssh://example.org/path/to/repo.git" for pushes, but pulls will still
:[K[K [KESCESC[KOO[KBB[K       use the original URL.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mREMOTES[0m
:[K[K [KESCESC[KOO[KBB[K       The name of one of the following can be used instead of a URL as
:[K[K [KESCESC[KOO[KBB[K       [1m<repository>[0m argument:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   a remote in the Git configuration file: [1m$GIT_DIR/config[0m,
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   a file in the [1m$GIT_DIR/remotes[0m directory, or
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       o   a file in the [1m$GIT_DIR/branches[0m directory.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       All of these also allow you to omit the refspec from the command line
:[K[K [KESCESC[KOO[KBB[K       because they each contain a refspec which git will use by default.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K   [1mNamed[0m [1mremote[0m [1min[0m [1mconfiguration[0m [1mfile[0m
:[K[K [KESCESC[KOO[KBB[K       You can choose to provide the name of a remote which you had
:[K[K [KESCESC[KOO[KBB[K       previously configured using [1mgit-remote[0m(1), [1mgit-config[0m(1) or even by a
:[K[K [KESCESC[KOO[KBB[K       manual edit to the [1m$GIT_DIR/config[0m file. The URL of this remote will
:[K[K [KESCESC[KOO[KBB[K       be used to access the repository. The refspec of this remote will be
:[K[K [KESCESC[KOO[KBB[K       used by default when you do not provide a refspec on the command line.
:[K[K [KESCESC[KOO[KBB[K       The entry in the config file would appear like this:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   [remote "<name>"]
:[K[K [KESCESC[KOO[KBB[K                           url = <url>
:[K[K [KESCESC[KOO[KBB[K                           pushurl = <pushurl>
:[K[K [KESCESC[KOO[KBB[K                           push = <refspec>
:[K[K [KESCESC[KOO[KBB[K                           fetch = <refspec>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The [1m<pushurl>[0m is used for pushes only. It is optional and defaults to
:[K[K [KESCESC[KOO[KBB[K       [1m<url>[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K   [1mNamed[0m [1mfile[0m [1min[0m [1m$GIT_DIR/remotes[0m
:[K[K [KESCESC[KOO[KBB[K       You can choose to provide the name of a file in [1m$GIT_DIR/remotes[0m. The
:[K[K [KESCESC[KOO[KBB[K       URL in this file will be used to access the repository. The refspec in
:[K[K [KESCESC[KOO[KBB[K       this file will be used as default when you do not provide a refspec on
:[K[K [KESCESC[KOO[KBB[K       the command line. This file should have the following format:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   URL: one of the above URL format
:[K[K [KESCESC[KOO[KBB[K                   Push: <refspec>
:[K[K [KESCESC[KOO[KBB[K                   Pull: <refspec>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mPush:[0m lines are used by [4mgit[24m [4mpush[24m and [1mPull:[0m lines are used by [4mgit[24m [4mpull[24m
:[K[K [KESCESC[KOO[KBB[K       and [4mgit[24m [4mfetch[24m. Multiple [1mPush:[0m and [1mPull:[0m lines may be specified for
:[K[K [KESCESC[KOO[KBB[K       additional branch mappings.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K   [1mNamed[0m [1mfile[0m [1min[0m [1m$GIT_DIR/branches[0m
:[K[K [KESCESC[KOO[KBB[K       You can choose to provide the name of a file in [1m$GIT_DIR/branches[0m. The
:[K[K [KESCESC[KOO[KBB[K       URL in this file will be used to access the repository. This file
:[K[K [KESCESC[KOO[KBB[K       should have the following format:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   <url>#<head>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1m<url>[0m is required; [1m#<head>[0m is optional.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Depending on the operation, git will use one of the following
:[K[K [KESCESC[KOO[KBB[K       refspecs, if you don't provide one on the command line. [1m<branch>[0m is
:[K[K [KESCESC[KOO[KBB[K       the name of this file in [1m$GIT_DIR/branches[0m and [1m<head>[0m defaults to
:[K[K [KESCESC[KOO[KBB[K       [1mmaster[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       git fetch uses:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   refs/heads/<head>:refs/heads/<branch>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       git push uses:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                   HEAD:refs/heads/<head>
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mOUTPUT[0m
:[K[K [KESCESC[KOO[KBB[K       The output of "git push" depends on the transport method used; this
:[K[K [KESCESC[KOO[KBB[K       section describes the output when pushing over the Git protocol
:[K[K [KESCESC[KOO[KBB[K       (either locally or via ssh).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The status of the push is output in tabular form, with each line
:[K[K [KESCESC[KOO[KBB[K       representing the status of a single ref. Each line is of the form:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K            <flag> <summary> <from> -> <to> (<reason>)
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       If --porcelain is used, then each line of the output is of the form:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K            <flag> \t <from>:<to> \t <summary> (<reason>)
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The status of up-to-date refs is shown only if --porcelain or
:[K[K [KESCESC[KOO[KBB[K       --verbose option is used.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       flag
:[K[K [KESCESC[KOO[KBB[K           A single character indicating the status of the ref:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           (space)
:[K[K [KESCESC[KOO[KBB[K               for a successfully pushed fast-forward;
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m+[0m
:[K[K [KESCESC[KOO[KBB[K               for a successful forced update;
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m-[0m
:[K[K [KESCESC[KOO[KBB[K               for a successfully deleted ref;
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m*[0m
:[K[K [KESCESC[KOO[KBB[K               for a successfully pushed new ref;
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m![0m
:[K[K [KESCESC[KOO[KBB[K               for a ref that was rejected or failed to push; and
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           [1m=[0m
:[K[K [KESCESC[KOO[KBB[K               for a ref that was up to date and did not need pushing.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       summary
:[K[K [KESCESC[KOO[KBB[K           For a successfully pushed ref, the summary shows the old and new
:[K[K [KESCESC[KOO[KBB[K           values of the ref in a form suitable for using as an argument to
:[K[K [KESCESC[KOO[KBB[K           [1mgit[0m [1mlog[0m (this is [1m<old>..<new>[0m in most cases, and [1m<old>...<new>[0m for
:[K[K [KESCESC[KOO[KBB[K           forced non-fast-forward updates).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           For a failed update, more details are given:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           rejected
:[K[K [KESCESC[KOO[KBB[K               Git did not try to send the ref at all, typically because it
:[K[K [KESCESC[KOO[KBB[K               is not a fast-forward and you did not force the update.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           remote rejected
:[K[K [KESCESC[KOO[KBB[K               The remote end refused the update. Usually caused by a hook on
:[K[K [KESCESC[KOO[KBB[K               the remote side, or because the remote repository has one of
:[K[K [KESCESC[KOO[KBB[K               the following safety options in effect:
:[K[K [KESCESC[KOO[KBB[K               [1mreceive.denyCurrentBranch[0m (for pushes to the checked out
:[K[K [KESCESC[KOO[KBB[K               branch), [1mreceive.denyNonFastForwards[0m (for forced
:[K[K [KESCESC[KOO[KBB[K               non-fast-forward updates), [1mreceive.denyDeletes[0m or
:[K[K [KESCESC[KOO[KBB[K               [1mreceive.denyDeleteCurrent[0m. See [1mgit-config[0m(1).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           remote failure
:[K[K [KESCESC[KOO[KBB[K               The remote end did not report the successful update of the
:[K[K [KESCESC[KOO[KBB[K               ref, perhaps because of a temporary error on the remote side,
:[K[K [KESCESC[KOO[KBB[K               a break in the network connection, or other transient error.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       from
:[K[K [KESCESC[KOO[KBB[K           The name of the local ref being pushed, minus its [1mrefs/<type>/[0m
:[K[K [KESCESC[KOO[KBB[K           prefix. In the case of deletion, the name of the local ref is
:[K[K [KESCESC[KOO[KBB[K           omitted.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       to
:[K[K [KESCESC[KOO[KBB[K           The name of the remote ref being updated, minus its [1mrefs/<type>/[0m
:[K[K [KESCESC[KOO[KBB[K           prefix.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       reason
:[K[K [KESCESC[KOO[KBB[K           A human-readable explanation. In the case of successfully pushed
:[K[K [KESCESC[KOO[KBB[K           refs, no explanation is needed. For a failed ref, the reason for
:[K[K [KESCESC[KOO[KBB[K           failure is described.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mNOTE[0m [1mABOUT[0m [1mFAST-FORWARDS[0m
:[K[K [KESCESC[KOO[KBB[K       When an update changes a branch (or more in general, a ref) that used
:[K[K [KESCESC[KOO[KBB[K       to point at commit A to point at another commit B, it is called a
:[K[K [KESCESC[KOO[KBB[K       fast-forward update if and only if B is a descendant of A.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       In a fast-forward update from A to B, the set of commits that the
:[K[K [KESCESC[KOO[KBB[K       original commit A built on top of is a subset of the commits the new
:[K[K [KESCESC[KOO[KBB[K       commit B builds on top of. Hence, it does not lose any history.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       In contrast, a non-fast-forward update will lose history. For example,
:[K[K [KESCESC[KOO[KBB[K       suppose you and somebody else started at the same commit X, and you
:[K[K [KESCESC[KOO[KBB[K       built a history leading to commit B while the other person built a
:[K[K [KESCESC[KOO[KBB[K       history leading to commit A. The history looks like this:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                 B
:[K[K [KESCESC[KOO[KBB[K                /
:[K[K [KESCESC[KOO[KBB[K            ---X---A
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Further suppose that the other person already pushed changes leading
:[K[K [KESCESC[KOO[KBB[K       to A back to the original repository from which you two obtained the
:[K[K [KESCESC[KOO[KBB[K       original commit X.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The push done by the other person updated the branch that used to
:[K[K [KESCESC[KOO[KBB[K       point at commit X to point at commit A. It is a fast-forward.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       But if you try to push, you will attempt to update the branch (that
:[K[K [KESCESC[KOO[KBB[K       now points at A) with commit B. This does [4mnot[24m fast-forward. If you did
:[K[K [KESCESC[KOO[KBB[K       so, the changes introduced by commit A will be lost, because everybody
:[K[K [KESCESC[KOO[KBB[K       will now start building on top of B.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The command by default does not allow an update that is not a
:[K[K [KESCESC[KOO[KBB[K       fast-forward to prevent such loss of history.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       If you do not want to lose your work (history from X to B) or the work
:[K[K [KESCESC[KOO[KBB[K       by the other person (history from X to A), you would need to first
:[K[K [KESCESC[KOO[KBB[K       fetch the history from the repository, create a history that contains
:[K[K [KESCESC[KOO[KBB[K       changes done by both parties, and push the result back.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       You can perform "git pull", resolve potential conflicts, and "git
:[K[K [KESCESC[KOO[KBB[K       push" the result. A "git pull" will create a merge commit C between
:[K[K [KESCESC[KOO[KBB[K       commits A and B.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                 B---C
:[K[K [KESCESC[KOO[KBB[K                /   /
:[K[K [KESCESC[KOO[KBB[K            ---X---A
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Updating A with the resulting merge commit will fast-forward and your
:[K[K [KESCESC[KOO[KBB[K       push will be accepted.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Alternatively, you can rebase your change between X and B on top of A,
:[K[K [KESCESC[KOO[KBB[K       with "git pull --rebase", and push the result back. The rebase will
:[K[K [KESCESC[KOO[KBB[K       create a new commit D that builds the change between X and B on top of
:[K[K [KESCESC[KOO[KBB[K       A.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                 B   D
:[K[K [KESCESC[KOO[KBB[K                /   /
:[K[K [KESCESC[KOO[KBB[K            ---X---A
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       Again, updating A with this commit will fast-forward and your push
:[K[K [KESCESC[KOO[KBB[K       will be accepted.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       There is another common situation where you may encounter
:[K[K [KESCESC[KOO[KBB[K       non-fast-forward rejection when you try to push, and it is possible
:[K[K [KESCESC[KOO[KBB[K       even when you are pushing into a repository nobody else pushes into.
:[K[K [KESCESC[KOO[KBB[K       After you push commit A yourself (in the first picture in this
:[K[K [KESCESC[KOO[KBB[K       section), replace it with "git commit --amend" to produce commit B,
:[K[K [KESCESC[KOO[KBB[K       and you try to push it out, because forgot that you have pushed A out
:[K[K [KESCESC[KOO[KBB[K       already. In such a case, and only if you are certain that nobody in
:[K[K [KESCESC[KOO[KBB[K       the meantime fetched your earlier commit A (and started building on
:[K[K [KESCESC[KOO[KBB[K       top of it), you can run "git push --force" to overwrite it. In other
:[K[K [KESCESC[KOO[KBB[K       words, "git push --force" is a method reserved for a case where you do
:[K[K [KESCESC[KOO[KBB[K       mean to lose history.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mEXAMPLES[0m
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m
:[K[K [KESCESC[KOO[KBB[K           Works like [1mgit[0m [1mpush[0m [1m<remote>[0m, where <remote> is the current
:[K[K [KESCESC[KOO[KBB[K           branch's remote (or [1morigin[0m, if no remote is configured for the
:[K[K [KESCESC[KOO[KBB[K           current branch).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m
:[K[K [KESCESC[KOO[KBB[K           Without additional configuration, pushes the current branch to the
:[K[K [KESCESC[KOO[KBB[K           configured upstream ([1mremote.origin.merge[0m configuration variable)
:[K[K [KESCESC[KOO[KBB[K           if it has the same name as the current branch, and errors out
:[K[K [KESCESC[KOO[KBB[K           without pushing otherwise.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The default behavior of this command when no <refspec> is given
:[K[K [KESCESC[KOO[KBB[K           can be configured by setting the [1mpush[0m option of the remote, or the
:[K[K [KESCESC[KOO[KBB[K           [1mpush.default[0m configuration variable.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           For example, to default to pushing only the current branch to
:[K[K [KESCESC[KOO[KBB[K           [1morigin[0m use [1mgit[0m [1mconfig[0m [1mremote.origin.push[0m [1mHEAD[0m. Any valid <refspec>
:[K[K [KESCESC[KOO[KBB[K           (like the ones in the examples below) can be configured as the
:[K[K [KESCESC[KOO[KBB[K           default for [1mgit[0m [1mpush[0m [1morigin[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1m:[0m
:[K[K [KESCESC[KOO[KBB[K           Push "matching" branches to [1morigin[0m. See <refspec> in the OPTIONS
:[K[K [KESCESC[KOO[KBB[K           section above for a description of "matching" branches.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1mmaster[0m
:[K[K [KESCESC[KOO[KBB[K           Find a ref that matches [1mmaster[0m in the source repository (most
:[K[K [KESCESC[KOO[KBB[K           likely, it would find [1mrefs/heads/master[0m), and update the same ref
:[K[K [KESCESC[KOO[KBB[K           (e.g.  [1mrefs/heads/master[0m) in [1morigin[0m repository with it. If [1mmaster[0m
:[K[K [KESCESC[KOO[KBB[K           did not exist remotely, it would be created.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1mHEAD[0m
:[K[K [KESCESC[KOO[KBB[K           A handy way to push the current branch to the same name on the
:[K[K [KESCESC[KOO[KBB[K           remote.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1mmothership[0m [1mmaster:satellite/master[0m [1mdev:satellite/dev[0m
:[K[K [KESCESC[KOO[KBB[K           Use the source ref that matches [1mmaster[0m (e.g.  [1mrefs/heads/master[0m)
:[K[K [KESCESC[KOO[KBB[K           to update the ref that matches [1msatellite/master[0m (most probably
:[K[K [KESCESC[KOO[KBB[K           [1mrefs/remotes/satellite/master[0m) in the [1mmothership[0m repository; do
:[K[K [KESCESC[KOO[KBB[K           the same for [1mdev[0m and [1msatellite/dev[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           See the section describing [1m<refspec>...[0m  above for a discussion of
:[K[K [KESCESC[KOO[KBB[K           the matching semantics.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           This is to emulate [1mgit[0m [1mfetch[0m run on the [1mmothership[0m using [1mgit[0m [1mpush[0m
:[K[K [KESCESC[KOO[KBB[K           that is run in the opposite direction in order to integrate the
:[K[K [KESCESC[KOO[KBB[K           work done on [1msatellite[0m, and is often necessary when you can only
:[K[K [KESCESC[KOO[KBB[K           make connection in one way (i.e. satellite can ssh into mothership
:[K[K [KESCESC[KOO[KBB[K           but mothership cannot initiate connection to satellite because the
:[K[K [KESCESC[KOO[KBB[K           latter is behind a firewall or does not run sshd).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           After running this [1mgit[0m [1mpush[0m on the [1msatellite[0m machine, you would
:[K[K [KESCESC[KOO[KBB[K           ssh into the [1mmothership[0m and run [1mgit[0m [1mmerge[0m there to complete the
:[K[K [KESCESC[KOO[KBB[K           emulation of [1mgit[0m [1mpull[0m that were run on [1mmothership[0m to pull changes
:[K[K [KESCESC[KOO[KBB[K           made on [1msatellite[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1mHEAD:master[0m
:[K[K [KESCESC[KOO[KBB[K           Push the current branch to the remote ref matching [1mmaster[0m in the
:[K[K [KESCESC[KOO[KBB[K           [1morigin[0m repository. This form is convenient to push the current
:[K[K [KESCESC[KOO[KBB[K           branch without thinking about its local name.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1mmaster:refs/heads/experimental[0m
:[K[K [KESCESC[KOO[KBB[K           Create the branch [1mexperimental[0m in the [1morigin[0m repository by copying
:[K[K [KESCESC[KOO[KBB[K           the current [1mmaster[0m branch. This form is only needed to create a
:[K[K [KESCESC[KOO[KBB[K           new branch or tag in the remote repository when the local name and
:[K[K [KESCESC[KOO[KBB[K           the remote name are different; otherwise, the ref name on its own
:[K[K [KESCESC[KOO[KBB[K           will work.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1m:experimental[0m
:[K[K [KESCESC[KOO[KBB[K           Find a ref that matches [1mexperimental[0m in the [1morigin[0m repository
:[K[K [KESCESC[KOO[KBB[K           (e.g.  [1mrefs/heads/experimental[0m), and delete it.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       [1mgit[0m [1mpush[0m [1morigin[0m [1m+dev:master[0m
:[K[K [KESCESC[KOO[KBB[K           Update the origin repository's master branch with the dev branch,
:[K[K [KESCESC[KOO[KBB[K           allowing non-fast-forward updates.  [1mThis[0m [1mcan[0m [1mleave[0m [1munreferenced[0m
:[K[K [KESCESC[KOO[KBB[K           [1mcommits[0m [1mdangling[0m [1min[0m [1mthe[0m [1morigin[0m [1mrepository.[0m  Consider the following
:[K[K [KESCESC[KOO[KBB[K           situation, where a fast-forward is not possible:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                           o---o---o---A---B  origin/master
:[K[K [KESCESC[KOO[KBB[K                                    \
:[K[K [KESCESC[KOO[KBB[K                                     X---Y---Z  dev
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           The above command would change the origin repository to
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K                                     A---B  (unnamed branch)
:[K[K [KESCESC[KOO[KBB[K                                    /
:[K[K [KESCESC[KOO[KBB[K                           o---o---o---X---Y---Z  master
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Commits A and B would no longer belong to a branch with a symbolic
:[K[K [KESCESC[KOO[KBB[K           name, and so would be unreachable. As such, these commits would be
:[K[K [KESCESC[KOO[KBB[K           removed by a [1mgit[0m [1mgc[0m command on the origin repository.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mSECURITY[0m
:[K[K [KESCESC[KOO[KBB[K       The fetch and push protocols are not designed to prevent one side from
:[K[K [KESCESC[KOO[KBB[K       stealing data from the other repository that was not intended to be
:[K[K [KESCESC[KOO[KBB[K       shared. If you have private data that you need to protect from a
:[K[K [KESCESC[KOO[KBB[K       malicious peer, your best option is to store it in another repository.
:[K[K [KESCESC[KOO[KBB[K       This applies to both clients and servers. In particular, namespaces on
:[K[K [KESCESC[KOO[KBB[K       a server are not effective for read access control; you should only
:[K[K [KESCESC[KOO[KBB[K       grant read access to a namespace to clients that you would trust with
:[K[K [KESCESC[KOO[KBB[K       read access to the entire repository.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K       The known attack vectors are as follows:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K        1. The victim sends "have" lines advertising the IDs of objects it
:[K[K [KESCESC[KOO[KBB[K           has that are not explicitly intended to be shared but can be used
:[K[K [KESCESC[KOO[KBB[K           to optimize the transfer if the peer also has them. The attacker
:[K[K [KESCESC[KOO[KBB[K           chooses an object ID X to steal and sends a ref to X, but isn't
:[K[K [KESCESC[KOO[KBB[K           required to send the content of X because the victim already has
:[K[K [KESCESC[KOO[KBB[K           it. Now the victim believes that the attacker has X, and it sends
:[K[K [KESCESC[KOO[KBB[K           the content of X back to the attacker later. (This attack is most
:[K[K [KESCESC[KOO[KBB[K           straightforward for a client to perform on a server, by creating a
:[K[K [KESCESC[KOO[KBB[K           ref to X in the namespace the client has access to and then
:[K[K [KESCESC[KOO[KBB[K           fetching it. The most likely way for a server to perform it on a
:[K[K [KESCESC[KOO[KBB[K           client is to "merge" X into a public branch and hope that the user
:[K[K [KESCESC[KOO[KBB[K           does additional work on this branch and pushes it back to the
:[K[K [KESCESC[KOO[KBB[K           server without noticing the merge.)
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K        2. As in #1, the attacker chooses an object ID X to steal. The victim
:[K[K [KESCESC[KOO[KBB[K           sends an object Y that the attacker already has, and the attacker
:[K[K [KESCESC[KOO[KBB[K           falsely claims to have X and not Y, so the victim sends Y as a
:[K[K [KESCESC[KOO[KBB[K           delta against X. The delta reveals regions of X that are similar
:[K[K [KESCESC[KOO[KBB[K           to Y to the attacker.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mGIT[0m
:[K[K [KESCESC[KOO[KBB[K       Part of the [1mgit[0m(1) suite
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[KGit 2.23.0                        08/16/2019                      GIT-PUSH(1)
:[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K[?1l>[?1049l
[2]+  Stopped                 git push --help
bash-3.2$ git fetch
remote: Enumerating objects: 5, done.[K
remote: Counting objects:  20% (1/5)[Kremote: Counting objects:  40% (2/5)[Kremote: Counting objects:  60% (3/5)[Kremote: Counting objects:  80% (4/5)[Kremote: Counting objects: 100% (5/5)[Kremote: Counting objects: 100% (5/5), done.[K
remote: Compressing objects:  33% (1/3)[Kremote: Compressing objects:  66% (2/3)[Kremote: Compressing objects: 100% (3/3)[Kremote: Compressing objects: 100% (3/3), done.[K
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0[K
[KUnpacking objects:  33% (1/3)[KUnpacking objects:  66% (2/3)[KUnpacking objects: 100% (3/3)[KUnpacking objects: 100% (3/3), done.
From https://github.com/AnmingGu/RetroTetris
   a60ab36..c5ea5a4  main       -> origin/main
bash-3.2$ git push
To https://github.com/AnmingGu/RetroTetris.git
 [31m! [rejected]       [m main -> main (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/AnmingGu/RetroTetris.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
bash-3.2$ git checkout
M	app.js
M	typescript
Your branch and 'origin/main' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
bash-3.2$ git branch
[?1h=* [32mmain[m[m
[K[?1l>bash-3.2$ git branch new
bash-3.2$ git branch
[?1h=* [32mmain[m[m
  new[m[m
[K[?1l>bash-3.2$ git checkout new
M	app.js
M	typescript
Switched to branch 'new'
bash-3.2$ git push -u origin new
[KEnumerating objects: 9, done.
[KCounting objects:  11% (1/9)[KCounting objects:  22% (2/9)[KCounting objects:  33% (3/9)[KCounting objects:  44% (4/9)[KCounting objects:  55% (5/9)[KCounting objects:  66% (6/9)[KCounting objects:  77% (7/9)[KCounting objects:  88% (8/9)[KCounting objects: 100% (9/9)[KCounting objects: 100% (9/9), done.
Delta compression using up to 4 threads
[KCompressing objects:  20% (1/5)[KCompressing objects:  40% (2/5)[KCompressing objects:  60% (3/5)[KCompressing objects:  80% (4/5)[KCompressing objects: 100% (5/5)[KCompressing objects: 100% (5/5), done.
[KWriting objects:  20% (1/5)[KWriting objects:  40% (2/5)[KWriting objects:  60% (3/5)[KWriting objects:  80% (4/5)[KWriting objects: 100% (5/5)[KWriting objects: 100% (5/5), 4.20 KiB | 2.10 MiB/s, done.
Total 5 (delta 3), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/3)[Kremote: Resolving deltas:  33% (1/3)[Kremote: Resolving deltas:  66% (2/3)[Kremote: Resolving deltas: 100% (3/3)[Kremote: Resolving deltas: 100% (3/3), completed with 3 local objects.[K
remote: 
remote: Create a pull request for 'new' on GitHub by visiting:[K
remote:      https://github.com/AnmingGu/RetroTetris/pull/new/new[K
remote: 
To https://github.com/AnmingGu/RetroTetris.git
 * [new branch]      new -> new
Branch 'new' set up to track remote branch 'new' from 'origin'.
bash-3.2$ git checkout  a[K[Kmain
M	app.js
M	typescript
Switched to branch 'main'
Your branch and 'origin/main' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
bash-3.2$ git checkout 
M	app.js
M	typescript
Your branch and 'origin/main' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
bash-3.2$ git branch
[?1h=* [32mmain[m[m
  new[m[m
[K[?1l>bash-3.2$ git merge new
Already up to date.
bash-3.2$ git merge main
Already up to date.
bash-3.2$ git merge main
Already up to date.
bash-3.2$ git comm[K[K[K[Kadd .
bash-3.2$ git commit -d 'd[Kfixed some issues'
error: unknown switch `d'
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

bash-3.2$ git commit -a'[K 
hint: Waiting for your editor to close the file... [?1049h[>4;2m[?1h=[?2004h[1;8r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[8;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name "~/Desktop/Computer Science/Tetris/.git/.COMMIT_EDITMSG
[7;86H.[8;1Hswp"
[10Cowned by: anminggu   dated: Tue Dec 29 21:03:40 2020
[9Cfile name: ~anminggu/Desktop/Computer Science/Tetris/.git/COMMIT_EDITMSG
[10Cmodified: no
[9Cuser name: anminggu   host name: Anmings-MacBook-Pro.local
[32m-- More --[?25h[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;1H[32m-- More --[m[8;1H[K[8;9Hprocess ID: 58135 (STILL RUNNING)
[32m-- More --[m[8;1H[K[8;1HWhile opening file "/Users/anminggu/Desktop/Computer Science/Tetris/.git/COMMIT_EDITM
[7;86HS[8;1H[32m-- More --[m[8;1H[K[8;1HG"
[32m-- More --[m[8;1H[K[8;14Hdated: Thu Dec 31 13:59:16 2020
[32m-- More --[m[8;1H[K[8;7HNEWER than swap file!
[32m-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H(1) Another program may be editing the same file.  If this is the case,
[32m-- More --[m[8;1H[K[8;5Hbe careful not to end up with two different instances of the same
[32m-- More --[m[8;1H[K[8;5Hfile when making changes.  Quit, or continue with caution.
[32m-- More --[m[8;1H[K[8;1H(2) An edit session for this file crashed.
[32m-- More --[m[8;1H[K[8;5HIf this is the case, use ":recover" or "vim -r /Users/anminggu/Desktop/Computer S
[7;86Hc[8;1H[32m-- More --[m[8;1H[K[8;1Hience/Tetris/.git/COMMIT_EDITMSG"
[32m-- More --[m[8;1H[K[8;5Hto recover the changes (see ":help recovery").
[32m-- More --[m[8;1H[K[8;5HIf you did this already, delete the swap file "/Users/anminggu/Desktop/Computer S
[7;86Hc[8;1H[32m-- More --[m[8;1H[K[8;1Hience/Tetris/.git/.COMMIT_EDITMSG.swp"
[32m-- More --[m[1;1H[L[1;5Hbe careful not to end up with two different instances of the same[8;1H[K[8;1H[32m-- More --[m[1;1H[L[1;1H(1) Another program may be editing the same file.  If this is the case,[8;5H[K[8;1H[32m-- More --[m
[7;1H[K[7;5HIf you did this already, delete the swap file "/Users/anminggu/Desktop/Computer Sc[8;1H[32m-- More --[m
[7;1H[K[7;1Hience/Tetris/.git/.COMMIT_EDITMSG.swp"
[32m-- More --[m[8;1H[K[8;5Hto avoid this message.
[32m-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H[32mSwap file "~/Desktop/Computer Science/Tetris/.git/.COMMIT_EDITMSG.swp" already exists[m
[7;86H[32m![8;1H-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort: [m[8;1H[K[8;1H[?2004l[23;2t[23;1t
[?2004l[?1l>[>4;m[?1049lerror: There was a problem with the editor 'vi'.
Please supply the message using either -m or -F option.
bash-3.2$ git branch
[?1h=* [32mmain[m[m
  new[m[m
[K[?1l>bash-3.2$ git checkout new
M	app.js
M	index.html
M	typescript
Switched to branch 'new'
Your branch is up to date with 'origin/new'.
bash-3.2$ git commit 
hint: Waiting for your editor to close the file... [?1049h[>4;2m[?1h=[?2004h[1;8r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[8;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name "~/Desktop/Computer Science/Tetris/.git/.COMMIT_EDITMSG
[7;86H.[8;1Hswp"
[10Cowned by: anminggu   dated: Tue Dec 29 21:03:40 2020
[9Cfile name: ~anminggu/Desktop/Computer Science/Tetris/.git/COMMIT_EDITMSG
[10Cmodified: no
[9Cuser name: anminggu   host name: Anmings-MacBook-Pro.local
[32m-- More --[?25h[m[8;1H[K[8;9Hprocess ID: 58135 (STILL RUNNING)
[32m-- More --[m[8;1H[K[8;1HWhile opening file "/Users/anminggu/Desktop/Computer Science/Tetris/.git/COMMIT_EDITM
[7;86HS[8;1H[32m-- More --[m[8;1H[K[8;1HG"
[32m-- More --[m[8;1H[K[8;14Hdated: Thu Dec 31 14:00:03 2020
[32m-- More --[m[8;1H[K[8;7HNEWER than swap file!
[32m-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H(1) Another program may be editing the same file.  If this is the case,
[32m-- More --[m[8;1H[K[8;5Hbe careful not to end up with two different instances of the same
[32m-- More --[m[8;1H[K[8;5Hfile when making changes.  Quit, or continue with caution.
[32m-- More --[m[8;1H[K[8;1H(2) An edit session for this file crashed.
[32m-- More --[m[8;1H[K[8;5HIf this is the case, use ":recover" or "vim -r /Users/anminggu/Desktop/Computer S
[7;86Hc[8;1H[32m-- More --[m[8;1H[K[8;1Hience/Tetris/.git/COMMIT_EDITMSG"
[32m-- More --[m[8;1H[K[8;5Hto recover the changes (see ":help recovery").
[32m-- More --[m[8;1H[K[8;5HIf you did this already, delete the swap file "/Users/anminggu/Desktop/Computer S
[7;86Hc[8;1H[32m-- More --[m[8;1H[K[8;1Hience/Tetris/.git/.COMMIT_EDITMSG.swp"
[32m-- More --[m[8;1H[K[8;5Hto avoid this message.
[32m-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H[32mSwap file "~/Desktop/Computer Science/Tetris/.git/.COMMIT_EDITMSG.swp" already exists[m
[7;86H[32m![8;1H-- More --[m[8;1H[K[8;1H
[32m-- More --[m[8;1H[K[8;1H[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort: [m[8;1H[K[?25l[8;1H"~/Desktop/Computer Science/Tetris/.git/COMMIT_EDITMSG" 15L, 363C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;5H[K[2;1H# Please enter the commit message for your changes. Lines starting[2;67H[K[3;1H# with '#' will be ignored, and an empty message aborts the commit.
#[4;5H[K[5;1H# On branch new
# Your branch is up to date with 'origin/new'.[6;47H[K[7;1H#[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?12$p





[?25l[1;7r[7;1H
[1;8r[7;1H# Changes to be committed:[8;1H[K[7;1H[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[7Cmodified:   app.js[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[7Cmodified:   index.html[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[7Cmodified:   typescript[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[?25h[?25l[1;7r[7;1H
[1;8r[7;1H# Changes not staged for commit:[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[7Cmodified:   typescript[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[?25h[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H[?25l[1;7r[1;1H[L[1;8r[1;1H# Changes to be committed:[?25h[?25l[1;7r[1;1H[L[1;8r[1;1H#[?25h





[?25l[1;7r[7;1H
[1;8r[7;1H#[7Cmodified:   typescript[?25h[?25l[1;7r[7;1H
[1;8r[7;1H#[?25h

[?2004l[?1l>[>4;m[?1049l
[3]+  Stopped                 git commit
bash-3.2$ git mer[K[K[K[K[Kt push -u
[KEnumerating objects: 28, done.
[KCounting objects:   3% (1/28)[KCounting objects:   7% (2/28)[KCounting objects:  10% (3/28)[KCounting objects:  14% (4/28)[KCounting objects:  17% (5/28)[KCounting objects:  21% (6/28)[KCounting objects:  25% (7/28)[KCounting objects:  28% (8/28)[KCounting objects:  32% (9/28)[KCounting objects:  35% (10/28)[KCounting objects:  39% (11/28)[KCounting objects:  42% (12/28)[KCounting objects:  46% (13/28)[KCounting objects:  50% (14/28)[KCounting objects:  53% (15/28)[KCounting objects:  57% (16/28)[KCounting objects:  60% (17/28)[KCounting objects:  64% (18/28)[KCounting objects:  67% (19/28)[KCounting objects:  71% (20/28)[KCounting objects:  75% (21/28)[KCounting objects:  78% (22/28)[KCounting objects:  82% (23/28)[KCounting objects:  85% (24/28)[KCounting objects:  89% (25/28)[KCounting objects:  92% (26/28)[KCounting objects:  96% (27/28)[KCounting objects: 100% (28/28)[KCounting objects: 100% (28/28), done.
Delta compression using up to 4 threads
[KCompressing objects:   3% (1/26)[KCompressing objects:   7% (2/26)[KCompressing objects:  11% (3/26)[KCompressing objects:  15% (4/26)[KCompressing objects:  19% (5/26)[KCompressing objects:  23% (6/26)[KCompressing objects:  26% (7/26)[KCompressing objects:  30% (8/26)[KCompressing objects:  34% (9/26)[KCompressing objects:  38% (10/26)[KCompressing objects:  42% (11/26)[KCompressing objects:  46% (12/26)[KCompressing objects:  50% (13/26)[KCompressing objects:  53% (14/26)[KCompressing objects:  57% (15/26)[KCompressing objects:  61% (16/26)[KCompressing objects:  65% (17/26)[KCompressing objects:  69% (18/26)[KCompressing objects:  73% (19/26)[KCompressing objects:  76% (20/26)[KCompressing objects:  80% (21/26)[KCompressing objects:  84% (22/26)[KCompressing objects:  88% (23/26)[KCompressing objects:  92% (24/26)[KCompressing objects:  96% (25/26)[KCompressing objects: 100% (26/26)[KCompressing objects: 100% (26/26), done.
[KWriting objects:   3% (1/28)[KWriting objects:   7% (2/28)[KWriting objects:  10% (3/28)[KWriting objects:  14% (4/28)[KWriting objects:  17% (5/28)[KWriting objects:  21% (6/28)[KWriting objects:  25% (7/28)[KWriting objects:  28% (8/28)[KWriting objects:  32% (9/28)[KWriting objects:  39% (11/28)[KWriting objects:  42% (12/28)[KWriting objects:  46% (13/28)[KWriting objects:  50% (14/28)[KWriting objects:  53% (15/28)[KWriting objects:  57% (16/28)[KWriting objects:  60% (17/28)[KWriting objects:  64% (18/28)[KWriting objects:  67% (19/28)[KWriting objects:  71% (20/28)[KWriting objects:  75% (21/28)[KWriting objects:  78% (22/28)[KWriting objects:  82% (23/28)[KWriting objects:  85% (24/28)[KWriting objects:  89% (25/28)[KWriting objects:  92% (26/28)[KWriting objects:  96% (27/28)[KWriting objects: 100% (28/28)[KWriting objects: 100% (28/28), 15.31 KiB | 3.83 MiB/s, done.
Total 28 (delta 5), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/5)[Kremote: Resolving deltas:  20% (1/5)[Kremote: Resolving deltas:  40% (2/5)[Kremote: Resolving deltas:  60% (3/5)[Kremote: Resolving deltas:  80% (4/5)[Kremote: Resolving deltas: 100% (5/5)[Kremote: Resolving deltas: 100% (5/5), done.[K
remote: 
remote: Create a pull request for 'new' on GitHub by visiting:[K
remote:      https://github.com/AnmingGu/RetroTetris/pull/new/new[K
remote: 
To https://github.com/AnmingGu/RetroTetris.git
 * [new branch]      new -> new
Branch 'new' set up to track remote branch 'new' from 'origin'.
bash-3.2$ git push -u origin new
Branch 'new' set up to track remote branch 'new' from 'origin'.
Everything up-to-date
bash-3.2$ 